models:
  - name: fct_orders
    latest_version: 1
    access: public
    config:
      contract:
        enforced: true
      group: finance
    tests:
      - dbt_utils.express_is_true:
          expression: "order_total >= 0"
    columns:
      - name: order_id
        data_type: varchar
        constraints:
          - type: not_null
        test:
          - unique
          - not_null
      - name: location_id
        data_type: varchar
      - name: customer_id
        data_type: varchar
        # tests:
        #   - dbt_utils.cardinality_equality:
        #       field: customer_id
        #       to: ref('stg_customers')
      - name: order_total
        data_type: number
        tests: 
        - dollars_spent_greater_than_one:
            group_by_column: customer_id
        - dbt_expectations.expect_column_values_to_be_between: 
        # this will perform what the dbt_utils.expression-is-true test does!
            min_value: 0
            row_condition: "order_id is not null" 
            strictly: false
        - dbt_expectations.expect_column_mean_to_be_between: 
        # this will perform what our singular and generic tests do!
            min_value: 1
            group_by: [customer_id] 
            row_condition: "order_id is not null" # (Optional)
            strictly: false
      - name: tax_paid
        data_type: number
      - name: ordered_at
        data_type: timestamp_ntz
      - name: customer_name
        data_type: varchar
      - name: location_name
        data_type: varchar
      - name: tax_rate
        data_type: number
      - name: location_opened_at
        data_type: timestamp_ntz
      - name: ordered_month
        data_type: number
      - name: ordered_day
        data_type: number
      - name: ordered_year
        data_type: number
    versions:
      - v: 1
        config:
          alias: fct_orders
      - v: 2
        columns:
          - name: order_amount
            data_type: number
          - name: location_opened_at
            data_type: date
          - name: order_date
            data_type: timestamp_ntz
          - include: all
            exclude: [order_total,ordered_at]
